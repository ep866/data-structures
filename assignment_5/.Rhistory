json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=25, byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=time)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:50,                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
drawResult(50)
str(data)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=25, byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
return draw(nIterations)
}
draw <- function(nIterations) {
plot <- ggplot(data=data, aes(x=id, y=time, fill=time)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:50,                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
#drawResult(25)
drawResult(50)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=25, byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
# return draw(nIterations)
}
draw <- function(nIterations) {
plot <- ggplot(data=data, aes(x=id, y=time, fill=time)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:50,                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
#drawResult(25)
drawResult(50)
str(data)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=25, byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
# return draw(nIterations)
}
draw <- function(nIterations) {
plot <- ggplot(data=data, aes(x=id, y=time, fill=time)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nIterations,                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
#drawResult(25)
drawResult(50)
str(data)
filename <- paste("profiler/test_", 50, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=25, byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
str(data)
filename <- paste("profiler/test_", 50, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=50, byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
str(data)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=nIterations, byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
return draw(nIterations)
}
draw <- function(nIterations) {
plot <- ggplot(data=data, aes(x=id, y=time, fill=time)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nIterations,                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
#drawResult(25)
drawResult(50)
drawResult(50)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=nIterations, byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=time)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nIterations,                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
#drawResult(25)
drawResult(50)
drawResult(100)
drawResult(50)
drawResult(200)
drawResult(200)
# load
nIterations <- 200
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
json_file
# load
nIterations <- 199
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=nIterations, byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=time)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nIterations,                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
data
data.length
length(data)
nrows(data)
nrow(data)
nrow(json_file)
length(json_file)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=length(json_file), byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=time)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nrow(data),                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
#drawResult(25)
drawResult(200)
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=time)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:199,                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
drawResult(25)
drawResult(200)
drawResult(25)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=length(json_file), byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=id)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nrow(data),                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
drawResult(25)
# drawResult(200)
drawResult(50)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=length(json_file), byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=id)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nrow(data),                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1", med="yellow",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
drawResult(50)
# drawResult(200)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=length(json_file), byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=id)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nrow(data),                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1", medium="yellow",  high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
drawResult(50)
# drawResult(200)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=length(json_file), byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=time)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nrow(data),                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1", high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
drawResult(50)
# drawResult(200)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=length(json_file), byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=id)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nrow(data),                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1", high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
drawResult(100)
# drawResult(200)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=length(json_file), byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=id)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nrow(data),                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1", high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
drawResult(200)
# drawResult(200)
# install.packages("wesanderson")
library(RJSONIO)
library(ggplot2)
library(wesanderson)
drawResult <- function(nIterations) {
# load
filename <- paste("profiler/test_", nIterations, "_times.json", sep="")
json <- file(filename, "r")
json_file <- fromJSON(json)
# unlist
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
# convert to data frame
data <- data.frame(matrix(unlist(json_file), nrow=length(json_file), byrow=T))
# assign colnames
colnames(data) <- c("id", "time")
# check if colnames were assigned
head(data)
# visualize
plot <- ggplot(data=data, aes(x=id, y=time, fill=time)) + geom_bar(stat="identity", width=1, colour="white") + ggtitle(paste( "MONGODB QUERY LATENCY TEST [", nIterations, " ITERATIONS]", sep="" )) + geom_text(aes(label=time), vjust=2, color="white", size=3) + ylab("TIME") + xlab("ITERATION ID") + scale_x_continuous(breaks=1:nrow(data),                                                                                                                                                                                                                                                               labels=data$id)
plot +  scale_fill_gradient( low="#20C2F1", high="#F15920" ) + theme(
axis.title.y=element_text(hjust=1, face="bold"),
axis.title.x=element_text(hjust=1, face="bold"),
axis.text.x=element_text(vjust=-3,size=12, face="bold"),
plot.title = element_text(color="#222222", face="bold", size=14))
}
drawResult(25)
# drawResult(200)
